apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    def versionPropsFile = rootProject.file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)


        defaultConfig {
            minSdkVersion rootProject.ext.minSdkVersion
            targetSdkVersion rootProject.ext.targetSdkVersion
            versionCode code
            versionName "1.0"
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    def privatePropFile = rootProject.file('private.properties')
    def Properties privateProps = new Properties()

    if (privatePropFile.canRead()) {
        privateProps.load(new FileInputStream(privatePropFile))
    } else {
        privateProps['DEV_KEY'] = "\"0\""
        privateProps['BASE_URL'] = "\"0\""
    }

    def signingPropFile = rootProject.file('signing.properties')
    def Properties signingProps = new Properties()

    if (signingPropFile.canRead()) {

        signingProps.load(new FileInputStream(signingPropFile))

        signingConfigs {
            release {
                storeFile rootProject.file('release.keystore')
                keyAlias signingProps['KEY_ALIAS']
                storePassword signingProps['STORE_PASSWORD']
                keyPassword signingProps['KEY_PASSWORD']
            }
        }
    } else {
        signingConfigs {
            release {
                storeFile rootProject.file('default-release.keystore')
                keyAlias "default-release"
                storePassword "123456"
                keyPassword "123456"
            }
        }
    }

    buildTypes {

        debug {
            applicationIdSuffix ".d"
            versionNameSuffix "-debug"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                output.outputFile = new File(
                        output.outputFile.parent,
                        output.outputFile.name.replace(".apk", "-${variant.versionName}.apk"))
            }
        }

        applicationVariants.all { variant ->
            variant.buildConfigField "String", "DEV_KEY", privateProps['DEV_KEY']
            variant.buildConfigField "String", "BASE_URL", privateProps['BASE_URL']
        }

        productFlavors {
            free {
                applicationId "com.explicit.free"
            }

            paid {
                applicationId "com.explicit.paid"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        maxProcessCount 4 // this is the default value
        javaMaxHeapSize "2g"
    }

}

ext {
    DAGGER_VERSION = '2.6'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile 'com.android.support:design:24.2.0'

    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.2.0'

    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    apt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    compile project(path: ':utils')
}
